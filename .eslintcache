[{"C:\\ProjectsLynn\\tcchat\\src\\index.js":"1","C:\\ProjectsLynn\\tcchat\\src\\App.js":"2","C:\\ProjectsLynn\\tcchat\\src\\reportWebVitals.js":"3","C:\\ProjectsLynn\\tcchat\\src\\chatbox\\TCChatBox.js":"4","C:\\ProjectsLynn\\tcchat\\src\\image\\Image.js":"5"},{"size":542,"mtime":1610619532610,"results":"6","hashOfConfig":"7"},{"size":209,"mtime":1610616371719,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":4408,"mtime":1610963798949,"results":"10","hashOfConfig":"7"},{"size":146,"mtime":1610679438792,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1plkvu",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\ProjectsLynn\\tcchat\\src\\index.js",[],["25","26"],"C:\\ProjectsLynn\\tcchat\\src\\App.js",[],"C:\\ProjectsLynn\\tcchat\\src\\reportWebVitals.js",[],"C:\\ProjectsLynn\\tcchat\\src\\chatbox\\TCChatBox.js",["27","28"],"import React from 'react';\r\nimport './TCChatBox.css';\r\nimport { AlinaImage, HankImage } from '../image/Image'\r\nimport { Search, Grid, Image, Feed, Icon, Input, Button, Card, Header, List,Item } from 'semantic-ui-react'\r\n\r\nconst ContactCard = (props) => (\r\n    <Grid className={props.className || 'chat-contactCard'}>\r\n        <Grid.Row style={props.cardRowStyle}>\r\n            <Grid.Column width={3} style={props.imageStyle}>\r\n                <Image src={props.image} />\r\n            </Grid.Column>\r\n            <Grid.Column width={7} style={props.cardNameStyle} >\r\n                <Item.Content>\r\n                    <Item.Header as='a'>{props.header1}</Item.Header>\r\n                    <Item.Meta>{props.contactState}</Item.Meta>\r\n                </Item.Content>    \r\n            </Grid.Column>\r\n            <Grid.Column width={6}>\r\n                <Feed.Date>{props.date}</Feed.Date>\r\n            </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row style={props.cardRowStyle}>\r\n            {props.description && <List style={props.dStyle} items={props.description} />}\r\n        </Grid.Row>\r\n    </Grid>\r\n)\r\n\r\nexport default function TCChatBox() {\r\n\r\n    return (\r\n        <div className=\"chat\">\r\n\r\n            <div className=\"chat-contact\">\r\n                <Search\r\n                    input={{ icon: 'search', iconPosition: 'left' }}\r\n                    size=\"mini\"\r\n                    value=\"Search names\" />\r\n\r\n                <ContactCard\r\n                    image={AlinaImage}\r\n                    header1={'Hank'}\r\n                    contactState={'Active'}\r\n                    date={'2 days ago'}\r\n                    description={['10 years project management working experience in ICT industry...']}\r\n                    imageStyle={{ padding: '0' }}\r\n                    cardNameStyle={{ textAlign: 'left', magrinLeft: '1vw' }}\r\n                    feedStyle={{ textAlign: 'right', marginTop: '0' }}\r\n                    dStyle={{ textAlign: 'left' }}\r\n                    cardRowStyle={{ padding: '0 0 5px 0' }}\r\n                />\r\n            </div>\r\n\r\n            {/* chat-box */}\r\n            <div className=\"chat-box\">\r\n                <div className=\"chat-boxHeader\">\r\n                    <header>Alina Williams</header>\r\n                    <p>Last seen 3 hours ago</p>\r\n                    <Icon name='bars'></Icon>\r\n\r\n\r\n                </div>\r\n                <div className='chat-boxContent'>\r\n                    box\r\n                </div>\r\n\r\n                <div className='chat-boxInput'>\r\n                    <Input icon='paper plane' placeholder='Type message here' />\r\n                    <Icon name='file'></Icon>\r\n                </div>\r\n            </div>\r\n\r\n            {/* detail */}\r\n            <div className=\"chat-detail\">\r\n                <div className='chat-detailBar'>\r\n                    <Button icon>\r\n                        <Icon name='add circle' />\r\n                    </Button>\r\n                    <Icon name='search'></Icon>\r\n                    <Icon name='bell outline'></Icon>\r\n                    <Image src={AlinaImage} />\r\n\r\n                </div>\r\n\r\n                <Card centered>\r\n                    <Card.Content>\r\n                        <Image src={AlinaImage} />\r\n                        <Card.Header>Heading 3</Card.Header>\r\n                        <Card.Description>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Aenean euismod bibendum laoreet. Proin , sed rhoncus pronin sapien nunc </Card.Description>\r\n\r\n                    </Card.Content>\r\n\r\n                </Card>\r\n                <Button primary>View details</Button>\r\n\r\n                <div className=\"ui divider\"></div>\r\n                <div className='chat-detailSpace'>space</div>\r\n                <div className=\"ui divider\"></div>\r\n\r\n                <Grid>\r\n                    <Grid.Row>\r\n                        <Button primary>View details</Button>\r\n                        <Button primary>View details</Button>\r\n                        <Button primary>View details</Button>\r\n\r\n                    </Grid.Row>\r\n                    <Grid.Row>\r\n                        <Button primary>View details</Button>\r\n                        <Button primary>View details</Button>\r\n                        <Button primary>View details</Button>\r\n\r\n                    </Grid.Row>\r\n\r\n                </Grid>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}","C:\\ProjectsLynn\\tcchat\\src\\image\\Image.js",[],["29","30"],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":3,"column":22,"nodeType":"37","messageId":"38","endLine":3,"endColumn":31},{"ruleId":"35","severity":1,"message":"39","line":4,"column":64,"nodeType":"37","messageId":"38","endLine":4,"endColumn":70},{"ruleId":"31","replacedBy":"40"},{"ruleId":"33","replacedBy":"41"},"no-native-reassign",["42"],"no-negated-in-lhs",["43"],"no-unused-vars","'HankImage' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.",["42"],["43"],"no-global-assign","no-unsafe-negation"]